# Generated by Django 5.0.3 on 2024-03-26 14:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Klass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Rasa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Spell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('time_cast', models.IntegerField()),
                ('distance', models.IntegerField()),
                ('duration', models.IntegerField()),
                ('level', models.IntegerField()),
                ('school', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='StatBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strength', models.IntegerField()),
                ('dexterity', models.IntegerField()),
                ('constitution', models.IntegerField()),
                ('intelegency', models.IntegerField()),
                ('wisdom', models.IntegerField()),
                ('charisma', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('time_played', models.TimeField(auto_now=True)),
                ('description', models.TextField()),
                ('user_photo', models.ImageField(blank=True, null=True, upload_to='photos/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CharList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('char_name', models.CharField(max_length=128)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('max_hp', models.IntegerField(blank=True, null=True)),
                ('cur_hp', models.IntegerField(blank=True, null=True)),
                ('mastery_bonus', models.IntegerField(blank=True, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('klass', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='news.klass')),
                ('rasa', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='news.rasa')),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField(blank=True)),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('time_update', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=True)),
                ('news_photo', models.ImageField(blank=True, null=True, upload_to='photos/')),
                ('cat', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='news.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='CharSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('char', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='news.charlist')),
                ('skill', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='news.skill')),
            ],
        ),
        migrations.AddField(
            model_name='charlist',
            name='skill',
            field=models.ManyToManyField(through='news.CharSkill', to='news.skill'),
        ),
        migrations.CreateModel(
            name='CharSpell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('char', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='chars', to='news.charlist')),
                ('spell', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='spells', to='news.spell')),
            ],
        ),
        migrations.AddField(
            model_name='charlist',
            name='spell',
            field=models.ManyToManyField(through='news.CharSpell', to='news.spell'),
        ),
        migrations.CreateModel(
            name='SpellComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='components', to='news.component')),
                ('spell', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='spell_components', to='news.spell')),
            ],
        ),
        migrations.AddField(
            model_name='spell',
            name='components',
            field=models.ManyToManyField(through='news.SpellComponent', to='news.component'),
        ),
        migrations.CreateModel(
            name='SpellKlass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('klass', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='klass', to='news.klass')),
                ('spell', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='spell_klass', to='news.spell')),
            ],
        ),
        migrations.AddField(
            model_name='spell',
            name='klass',
            field=models.ManyToManyField(through='news.SpellKlass', to='news.klass'),
        ),
        migrations.AddField(
            model_name='charlist',
            name='stat_block',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='news.statblock'),
        ),
        migrations.AddConstraint(
            model_name='charskill',
            constraint=models.UniqueConstraint(fields=('char', 'skill'), name='unique 2'),
        ),
        migrations.AddConstraint(
            model_name='charspell',
            constraint=models.UniqueConstraint(fields=('char', 'spell'), name='unique 1'),
        ),
        migrations.AddConstraint(
            model_name='spellcomponent',
            constraint=models.UniqueConstraint(fields=('spell', 'component'), name='unique 3'),
        ),
        migrations.AddConstraint(
            model_name='spellklass',
            constraint=models.UniqueConstraint(fields=('klass', 'spell'), name='unique 4'),
        ),
    ]
